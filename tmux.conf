# Kudos to:
# https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# ------------------------
# --- General settings ---
# ------------------------

# Set Tmux Prefix
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Reload tmux config
unbind r
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# Set global defaults
set-option -g default-shell /bin/zsh
set-option -g default-terminal "screen-256color"

set -g base-index 1
setw -g pane-base-index 1

# Stuff
set -g visual-activity on
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Set mouse mode correctly
if-shell "test $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1) -lt 2" "set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on"
if-shell "test $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1) -ge 2" "set -g mouse on;"

# VI settings
set -g status-keys vi   # inside statusline
setw -g mode-keys vi

# --------------------
# --- Key bindings ---
# --------------------

# Unbind default key bindings, we're going to override
unbind [        # paste-buffer
unbind ]        #
unbind n        # next-window
unbind p        # previous-window
unbind l        # last-window
unbind &        # kill-window
unbind "#"      # list-buffer
unbind =        # choose-buffer
unbind M-Up     # resize 5 rows up
unbind M-Down   # resize 5 rows down
unbind M-Right  # resize 5 rows right
unbind M-Left   # resize 5 rows left

# Inside a window selection / copy we use vi bindings
bind C-y copy-mode  # trigger copy mode

if-shell "test $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1) -lt 2" \
    "bind -t vi-copy v begin-selection \
     bind -t vi-copy y copy-selection \
     bind -t vi-copy V rectangle-toggle \
     bind -t vi-copy Escape cancel"

if-shell "test $(tmux -V | cut -d' ' -f2 | cut -d'.' -f1) -ge 2" \
    "bind -T vi-copy v begin-selection \
     bind -T vi-copy y copy-selection \
     bind -T vi-copy V rectangle-toggle \
     bind -T vi-copy Escape cancel"

bind p paste-buffer

# ---------------------------
# --- Vim-Tmux-Navigation ---
# ---------------------------

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# smart pane switching with arrow key bindings
bind -n C-Left  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-Down  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-Up    run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# smart pane resizing inside tmux with vim bindings
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W '<') || tmux resize-pane -L"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W +) || tmux resize-pane -D"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W -) || tmux resize-pane -U"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W '>') || tmux resize-pane -R"

# smart pane resizing inside tmux with arrow key bindings
bind -n M-Left  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W '<') || tmux resize-pane -L"
bind -n M-Down  run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W +) || tmux resize-pane -D"
bind -n M-Up    run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W -) || tmux resize-pane -U"
bind -n M-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-W '>') || tmux resize-pane -R"

# smart window switching
bind -n S-Left previous-window
bind -n S-Right next-window

# -------------------------
# --- Renew environment ---
# -------------------------
set -g update-environment \
    "DISPLAY \
    SSH_ASKPASS \
    SSH_AUTH_SOCK \
    SSH_AGENT_PID \
    SSH_CONNECTION \
    SSH_TTY \
    WINDOWID \
    XAUTHORITY"

# ---------------
# --- Plugins ---
# ---------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-fpp'

# Plugin properties
set -g @sidebar-tree-command 'ls -1'

# -----------------------------------------
# --- Nesting local and remote sessions ---
# -----------------------------------------

# Session is considered to be remote when we ssh into host
if-shell 'test -n "${SSH_CLIENT}"' \
    'source-file ~/.tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# -------------------------
# --- Additional config ---
# -------------------------
if-shell "test -f ~/.tmux.airline.conf" "source ~/.tmux.airline.conf"

# ------------------------------------------------------
# --- Initialize TMUX plugin manager -------------------
# --- keep this line at the very bottom of tmux.conf ---
# ------------------------------------------------------
run '~/.tmux/plugins/tpm/tpm'
